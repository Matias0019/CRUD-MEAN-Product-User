version: '3'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181

  kafka-broker-1:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-broker-1
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

# docker exec -it kafka-broker-1 bash
# kafka-topics --bootstrap-server kafka-broker-1:9092 --create --topic debugeando-ideas
# kafka-console-producer --bootstrap-server kafka-broker-1:9092 --topic debugeando-ideas
# kafka-console-consumer --bootstrap-server broker:9092 --topic debugeando-ideas  --from-beginning
#   mongo:
#     container_name: mongo
#     image: mongo:4.2.1-bionic
#     restart: always
#     ports:
#       - "27018:27017"
#     networks:
#       - backend
#   app:
#     container_name: ts-node-app
#     build: 
#       context: .
#       dockerfile: Dockerfile
#       target: base
#     restart: always
#     env_file: .env
#     expose:
#       - ${PORT}
#     ports:
#       - ${PORT}:${PORT}
#     environment: 
#       - MONGODB_URL=mongodb://mongo:27017/node-boilerplate
#       - CLIENT_URL=${CLIENT_URL}
#     links: 
#       - mongo  
#     depends_on:
#       - mongo  
#     networks:
#       - backend

# networks:
#   backend:
#     driver: bridge    


